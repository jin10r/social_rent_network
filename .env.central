# ===========================================
# SOCIAL RENT APP - ЦЕНТРАЛИЗОВАННЫЕ НАСТРОЙКИ
# ===========================================
# Этот файл содержит все настройки приложения в одном месте
# Скопируйте этот файл в .env и настройте под ваши нужды

# ===========================================
# ОСНОВНЫЕ НАСТРОЙКИ ОКРУЖЕНИЯ
# ===========================================
ENVIRONMENT=development
LOG_LEVEL=INFO

# ===========================================
# НАСТРОЙКИ БАЗЫ ДАННЫХ (PostgreSQL + PostGIS)
# ===========================================
# Настройки подключения к PostgreSQL
POSTGRES_DB=social_rent
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123

# Порты базы данных
DB_INTERNAL_PORT=5432
DB_EXTERNAL_PORT=5433

# URL подключений (для использования в приложениях)
DATABASE_URL_INTERNAL=postgresql+asyncpg://postgres:postgres123@db:5432/social_rent
DATABASE_URL_EXTERNAL=postgresql+asyncpg://postgres:postgres123@localhost:5433/social_rent

# ===========================================
# НАСТРОЙКИ BACKEND (FastAPI)
# ===========================================
# Порт и хост для backend
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8001

# API настройки
API_PREFIX=/api

# Безопасность
SECRET_KEY=your_secret_key_here_change_in_production

# Автогенерация тестовых данных (true/false/auto)
GENERATE_TEST_DATA=auto

# ===========================================
# НАСТРОЙКИ FRONTEND (React)
# ===========================================
FRONTEND_PORT=3000
FRONTEND_HOST=0.0.0.0

# Режим разработки для React
CHOKIDAR_USEPOLLING=true

# ===========================================
# TELEGRAM BOT НАСТРОЙКИ
# ===========================================
# Токен бота (получить у @BotFather)
BOT_TOKEN=8482163056:AAFO_l3IuliKB6I81JyQ-3_VrZuQ-8S5P-k

# Имя пользователя бота (без @)
BOT_USERNAME=social_rent_bot

# ===========================================
# ПУБЛИЧНЫЕ URL (для Telegram Web App)
# ===========================================
# ВАЖНО: Telegram требует HTTPS для Web App
# Для локальной разработки используйте ngrok

# URL для веб-приложения (фронтенд) - должен быть HTTPS
WEBAPP_URL=https://your-ngrok-frontend-url.ngrok-free.app

# URL для backend API - можно HTTP для внутреннего использования  
BACKEND_URL=http://your-server-ip:8001

# Для локальной разработки через ngrok
NGROK_FRONTEND_URL=https://your-ngrok-frontend-url.ngrok-free.app

# ===========================================
# CORS НАСТРОЙКИ
# ===========================================
# Разрешенные источники для CORS
ALLOWED_ORIGINS=http://localhost:3000,https://your-ngrok-frontend-url.ngrok-free.app

# ===========================================
# DOCKER НАСТРОЙКИ
# ===========================================
# Настройки для docker-compose

# Имя Docker сети
DOCKER_NETWORK_NAME=social_rent_network

# Имя volume для PostgreSQL
POSTGRES_VOLUME_NAME=social_rent_postgres_data

# ===========================================
# РЕЖИМЫ РАЗВЕРТЫВАНИЯ
# ===========================================
# Используется для условной логики в docker-compose

# Режим: remote - для удаленного сервера
# Режим: local - для локальной разработки фронтенда
DEPLOYMENT_MODE=remote

# ===========================================
# ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ
# ===========================================

# Настройки для production
PRODUCTION_DOMAIN=your-production-domain.com

# Настройки резервного копирования
BACKUP_ENABLED=false
BACKUP_SCHEDULE="0 2 * * *"

# ===========================================
# ПРИМЕРЫ НАСТРОЙКИ ДЛЯ РАЗНЫХ СЦЕНАРИЕВ
# ===========================================

# Сценарий 1: Удаленный сервер
# BOT_TOKEN=your_real_bot_token
# WEBAPP_URL=https://your-ngrok-frontend-url.ngrok-free.app  
# BACKEND_URL=http://your-server-ip:8001
# ALLOWED_ORIGINS=https://your-ngrok-frontend-url.ngrok-free.app

# Сценарий 2: Локальная разработка
# BOT_TOKEN=your_test_bot_token
# WEBAPP_URL=https://12345.ngrok-free.app
# BACKEND_URL=http://localhost:8001
# ALLOWED_ORIGINS=http://localhost:3000,https://12345.ngrok-free.app
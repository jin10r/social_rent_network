#!/bin/bash

echo "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."

# –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª
if [ -f ".env" ]; then
    echo "üìã –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª"
    
    # –°–¥–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp .env .env.backup.$(date +%Y%m%d_%H%M%S)
    echo "üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env —Ñ–∞–π–ª–∞"
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    missing_vars=()
    
    # –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars=(
        "BACKEND_PORT"
        "FRONTEND_PORT"
        "DB_INTERNAL_PORT"
        "POSTGRES_DB"
        "POSTGRES_USER"
        "API_PREFIX"
        "BACKEND_HOST"
        "SECRET_KEY"
        "ENVIRONMENT"
        "LOG_LEVEL"
        "GENERATE_TEST_DATA"
        "POSTGRES_VOLUME_NAME"
        "DOCKER_NETWORK_NAME"
        "REACT_APP_BACKEND_URL"
        "REACT_APP_BOT_USERNAME"
    )
    
    for var in "${required_vars[@]}"; do
        if ! grep -q "^${var}=" .env; then
            missing_vars+=("$var")
        fi
    done
    
    if [ ${#missing_vars[@]} -gt 0 ]; then
        echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${missing_vars[*]}"
        echo "üîÑ –î–æ–±–∞–≤–ª—è—é –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ..."
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        for var in "${missing_vars[@]}"; do
            case $var in
                "BACKEND_PORT")
                    echo "BACKEND_PORT=8001" >> .env
                    ;;
                "FRONTEND_PORT")
                    echo "FRONTEND_PORT=3000" >> .env
                    ;;
                "DB_INTERNAL_PORT")
                    echo "DB_INTERNAL_PORT=5432" >> .env
                    ;;
                "POSTGRES_DB")
                    echo "POSTGRES_DB=social_rent" >> .env
                    ;;
                "POSTGRES_USER")
                    echo "POSTGRES_USER=postgres" >> .env
                    ;;
                "API_PREFIX")
                    echo "API_PREFIX=/api" >> .env
                    ;;
                "BACKEND_HOST")
                    echo "BACKEND_HOST=0.0.0.0" >> .env
                    ;;
                "SECRET_KEY")
                    echo "SECRET_KEY=your_secret_key_change_in_production" >> .env
                    ;;
                "ENVIRONMENT")
                    echo "ENVIRONMENT=development" >> .env
                    ;;
                "LOG_LEVEL")
                    echo "LOG_LEVEL=INFO" >> .env
                    ;;
                "GENERATE_TEST_DATA")
                    echo "GENERATE_TEST_DATA=auto" >> .env
                    ;;
                "POSTGRES_VOLUME_NAME")
                    echo "POSTGRES_VOLUME_NAME=social_rent_postgres_data" >> .env
                    ;;
                "DOCKER_NETWORK_NAME")
                    echo "DOCKER_NETWORK_NAME=social_rent_network" >> .env
                    ;;
                "REACT_APP_BACKEND_URL")
                    if grep -q "^BACKEND_URL=" .env; then
                        backend_url=$(grep "^BACKEND_URL=" .env | cut -d'=' -f2)
                        echo "REACT_APP_BACKEND_URL=$backend_url" >> .env
                    else
                        echo "REACT_APP_BACKEND_URL=http://YOUR_SERVER_IP:8001" >> .env
                    fi
                    ;;
                "REACT_APP_BOT_USERNAME")
                    if grep -q "^BOT_USERNAME=" .env; then
                        bot_username=$(grep "^BOT_USERNAME=" .env | cut -d'=' -f2)
                        echo "REACT_APP_BOT_USERNAME=$bot_username" >> .env
                    else
                        echo "REACT_APP_BOT_USERNAME=social_rent_bot" >> .env
                    fi
                    ;;
            esac
        done
        
        # –ï—Å–ª–∏ –Ω–µ—Ç DATABASE_URL_INTERNAL, —Å–æ–∑–¥–∞–¥–∏–º –µ—ë
        if ! grep -q "^DATABASE_URL_INTERNAL=" .env; then
            if grep -q "^POSTGRES_PASSWORD=" .env; then
                db_password=$(grep "^POSTGRES_PASSWORD=" .env | cut -d'=' -f2)
                echo "DATABASE_URL_INTERNAL=postgresql+asyncpg://postgres:$db_password@db:5432/social_rent" >> .env
            fi
        fi
        
        echo "‚úÖ –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
    else
        echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
else
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./scripts/setup-config.sh –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    exit 1
fi

echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
./test-config.sh
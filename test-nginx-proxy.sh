#!/bin/bash

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ nginx reverse proxy..."
echo "====================================="

NGINX_URL="http://localhost:8080"

echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ nginx..."
if curl -s --max-time 5 "$NGINX_URL" > /dev/null; then
    echo "  ‚úÖ Nginx –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $NGINX_URL"
else
    echo "  ‚ùå Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $NGINX_URL"
    echo "  üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker compose up -d"
    exit 1
fi

echo ""
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ API (backend)..."

# –¢–µ—Å—Ç health check endpoint
echo "  üìä Health check: $NGINX_URL/health"
response=$(curl -s -w "%{http_code}" "$NGINX_URL/health")
http_code="${response: -3}"
if [ "$http_code" = "200" ]; then
    echo "    ‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $http_code)"
else
    echo "    ‚ùå Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $http_code)"
fi

# –¢–µ—Å—Ç API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo "  üìö API docs: $NGINX_URL/docs"
response=$(curl -s -w "%{http_code}" "$NGINX_URL/docs")
http_code="${response: -3}"
if [ "$http_code" = "200" ]; then
    echo "    ‚úÖ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ (HTTP $http_code)"
else
    echo "    ‚ùå API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (HTTP $http_code)"
fi

# –¢–µ—Å—Ç metro stations API
echo "  üöá Metro API: $NGINX_URL/api/metro/stations"
response=$(curl -s -w "%{http_code}" "$NGINX_URL/api/metro/stations")
http_code="${response: -3}"
if [ "$http_code" = "200" ]; then
    echo "    ‚úÖ Metro API —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $http_code)"
else
    echo "    ‚ùå Metro API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $http_code)"
fi

echo ""
echo "üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ frontend..."

# –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
echo "  üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: $NGINX_URL/"
response=$(curl -s -w "%{http_code}" "$NGINX_URL/")
http_code="${response: -3}"
if [ "$http_code" = "200" ]; then
    echo "    ‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $http_code)"
else
    echo "    ‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $http_code)"
fi

# –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
echo "  üì¶ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ frontend)"
if curl -s --max-time 5 "$NGINX_URL/static" > /dev/null; then
    echo "    ‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã"
else
    echo "    ‚ÑπÔ∏è  –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏ React"
fi

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ proxy..."
headers=$(curl -s -I "$NGINX_URL/health")
if echo "$headers" | grep -q "X-Forwarded-For"; then
    echo "  ‚úÖ Proxy –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
else
    echo "  ‚ö†Ô∏è  Proxy –∑–∞–≥–æ–ª–æ–≤–∫–∏ –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å"
fi

echo ""
echo "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "  ‚Ä¢ Nginx –ø–æ—Ä—Ç: 8080"
echo "  ‚Ä¢ Backend –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ: /api/* ‚Üí backend:8001"
echo "  ‚Ä¢ Frontend –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ: /* ‚Üí frontend:3000"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  docker compose logs nginx    # –õ–æ–≥–∏ nginx"
echo "  docker compose logs backend  # –õ–æ–≥–∏ backend"
echo "  docker compose logs frontend # –õ–æ–≥–∏ frontend"
echo "  docker compose ps            # –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo ""
echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
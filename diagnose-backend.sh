#!/bin/bash

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º..."

# –û—Å—Ç–∞–Ω–æ–≤–∏–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.server.yml down 2>/dev/null

echo "üß™ –ó–∞–ø—É—Å–∫ –±–µ–∑ health checks –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
docker-compose -f docker-compose.test.yml --env-file .env up -d db

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

echo "üìä –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
docker-compose -f docker-compose.test.yml ps db

echo "üöÄ –ó–∞–ø—É—Å–∫ backend..."
docker-compose -f docker-compose.test.yml --env-file .env up -d backend

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

echo "üìä –°—Ç–∞—Ç—É—Å backend:"
docker-compose -f docker-compose.test.yml ps backend

echo "üìã –õ–æ–≥–∏ backend –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫:"
docker-compose -f docker-compose.test.yml logs --tail=50 backend

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backend:"
echo "–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ http://localhost:8001/health..."

# –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å health endpoint
if docker exec social_rent_backend python -c "
import requests
import sys
try:
    response = requests.get('http://localhost:8001/health', timeout=5)
    print(f'‚úÖ Health check —É—Å–ø–µ—à–µ–Ω: {response.status_code}')
    print(f'Response: {response.text}')
except Exception as e:
    print(f'‚ùå Health check failed: {e}')
    sys.exit(1)
" 2>/dev/null; then
    echo "‚úÖ Backend –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check"
else
    echo "‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check"
    
    echo ""
    echo "üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
    docker exec social_rent_backend ps aux || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    docker exec social_rent_backend netstat -tlnp || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤"
fi

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
if docker exec social_rent_db pg_isready -U postgres -d social_rent; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é"
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞"
fi

echo ""
echo "üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend –≤—ã—à–µ"
echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env"
echo "4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ"
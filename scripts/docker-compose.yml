version: "3.9"

networks:
  social_rent_network:
    name: social_rent_network

services:
  db:
    image: postgis/postgis:15-3.4
    container_name: social_rent_db
    environment:
      POSTGRES_DB: social_rent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - social_rent_postgres_data:/var/lib/postgresql/data
    networks:
      - social_rent_network
    # Внешние порты НЕ публикуем

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: social_rent_backend
    environment:
      USE_POSTGRES: "true"
      DATABASE_URL: postgresql+asyncpg://postgres:postgres123@db:5432/social_rent
      ALLOWED_ORIGINS: http://localhost,https://localhost
      BOT_TOKEN: ${BOT_TOKEN:-}
      API_PREFIX: /api
      LOG_LEVEL: INFO
    depends_on:
      - db
    networks:
      - social_rent_network
    expose:
      - "8001"  # только внутри сети

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: social_rent_frontend
    environment:
      - REACT_APP_BACKEND_URL=/api
    networks:
      - social_rent_network
    expose:
      - "3000"  # только внутри сети

  nginx:
    image: nginx:1.25-alpine
    container_name: social_rent_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - social_rent_network
    ports:
      - "8080:80" # единственная публичная точка; проксирует фронт и /api внутрь

volumes:
  social_rent_postgres_data:
    name: ${POSTGRES_VOLUME_NAME:-social_rent_postgres_data}
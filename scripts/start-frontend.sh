#!/bin/bash

# ==========================================
# –°–ö–†–ò–ü–¢ –ó–ê–ü–£–°–ö–ê –õ–û–ö–ê–õ–¨–ù–û–ì–û –§–†–û–ù–¢–ï–ù–î–ê  
# ==========================================
# –ó–∞–ø—É—Å–∫–∞–µ—Ç: frontend (–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É backend)

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ Social Rent App - –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥"
echo "==============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/setup-config.sh"
    exit 1
fi

echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
source .env

required_vars=("BACKEND_URL" "WEBAPP_URL" "FRONTEND_PORT")
for var in "${required_vars[@]}"; do
    if [ -z "${!var}" ]; then
        echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –∑–∞–¥–∞–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ"
        exit 1
    fi
done

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backend
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backend ($BACKEND_URL)..."
backend_host=$(echo $BACKEND_URL | sed 's|http://||' | sed 's|https://||' | cut -d: -f1)
backend_port=$(echo $BACKEND_URL | sed 's|.*:||')

if timeout 5 bash -c "</dev/tcp/$backend_host/$backend_port" 2>/dev/null; then
    echo "‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ö†Ô∏è  Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.frontend.yml down 2>/dev/null || true

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$1" = "--build" ]; then
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."
    docker-compose -f docker-compose.frontend.yml build
fi

# –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
docker-compose -f docker-compose.frontend.yml --env-file .env up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
docker-compose -f docker-compose.frontend.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:"
if curl -f http://localhost:${FRONTEND_PORT} >/dev/null 2>&1; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≥–æ—Ç–æ–≤"
else
    echo "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –≥–æ—Ç–æ–≤"
fi

echo
echo "üéâ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω!"
echo
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  docker-compose -f docker-compose.frontend.yml logs -f   # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "  docker-compose -f docker-compose.frontend.yml down     # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "  –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:${FRONTEND_PORT}"
echo "  Backend API: ${BACKEND_URL}"
echo "  Telegram Web App: ${WEBAPP_URL}"
echo
echo "üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ngrok:"
echo "  1. ngrok http ${FRONTEND_PORT}"
echo "  2. –û–±–Ω–æ–≤–∏—Ç–µ WEBAPP_URL –≤ .env –Ω–∞ ngrok URL"
echo "  3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"
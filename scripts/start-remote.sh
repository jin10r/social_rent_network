#!/bin/bash

# ==========================================
# –°–ö–†–ò–ü–¢ –ó–ê–ü–£–°–ö–ê –£–î–ê–õ–ï–ù–ù–û–ì–û –°–ï–†–í–ï–†–ê
# ==========================================
# –ó–∞–ø—É—Å–∫–∞–µ—Ç: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö + backend + bot

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ Social Rent App - –£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"
echo "============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/setup-config.sh"
    exit 1
fi

echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
source .env

required_vars=("BOT_TOKEN" "DATABASE_URL_INTERNAL" "BACKEND_PORT")
for var in "${required_vars[@]}"; do
    if [ -z "${!var}" ]; then
        echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –∑–∞–¥–∞–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ"
        exit 1
    fi
done

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.remote.yml down 2>/dev/null || true

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$1" = "--build" ]; then
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f docker-compose.remote.yml build
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.remote.yml --env-file .env up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose -f docker-compose.remote.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks
echo
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if docker-compose -f docker-compose.remote.yml exec -T db pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} >/dev/null 2>&1; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞"
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
sleep 5
if curl -f http://localhost:${BACKEND_PORT}/health >/dev/null 2>&1; then
    echo "‚úÖ Backend –≥–æ—Ç–æ–≤"
else
    echo "‚ùå Backend –Ω–µ –≥–æ—Ç–æ–≤"
fi

echo
echo "üéâ –£–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
echo
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  docker-compose -f docker-compose.remote.yml logs -f     # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "  docker-compose -f docker-compose.remote.yml ps         # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  docker-compose -f docker-compose.remote.yml down       # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:"
echo "  Backend API: http://localhost:${BACKEND_PORT}"
echo "  Backend Health: http://localhost:${BACKEND_PORT}/health"
echo "  Database: localhost:${DB_EXTERNAL_PORT}"